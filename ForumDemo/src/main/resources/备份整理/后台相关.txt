常见的HTTP状态码(HTTP Status Code)说明
https://blog.csdn.net/qq_41378597/article/details/90348764

session控制登录问题:
https://blog.csdn.net/shwjakak/article/details/124533029?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-124533029-blog-128118279.pc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-124533029-blog-128118279.pc_relevant_recovery_v2&utm_relevant_index=2

大厂架构演进实战之手写 CAS 单点登录
https://blog.csdn.net/weijia521/article/details/109194758

SpringBoot集成JWT实现Token登录验证
https://blog.csdn.net/qq_42263280/article/details/128009297

好用到爆！IDEA版Postman面世了，功能真心强大
https://blog.csdn.net/BASK2311/article/details/128465792

Hutool 常用工具类介绍-DateUtil
https://blog.csdn.net/liuerchong/article/details/124606563


启动报错问题 Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.
解决方案3:
https://blog.csdn.net/wangzhongshun/article/details/123069833

Maven的pom.xml中resources标签的用法
https://blog.csdn.net/wenonepiece/article/details/112721380


MybatisPlus多表连接查询
https://blog.csdn.net/m0_63836794/article/details/122593962

mybatis-plus-join mybatis-plus多表联查必备神器(icu.mhb  JoinBaseMapper)
https://blog.csdn.net/mahuibo123/article/details/125886063

mybatis-plus-join用法(com.github.yulichang MPJBaseMapper)
https://blog.csdn.net/qq_24298751/article/details/125621162
https://blog.csdn.net/qq_31116181/article/details/113741489

MPJ API
https://gitee.com/best_handsome/mybatis-plus-join/wikis/MyLambdaWrapper/selectAs

解决查询评论关联同一个表两次问题 Mybatis Plus Join
https://ylctmh.com/pages/core/qt/many.html

总网址
https://mybatisplusjoin.com/

MPJ坐标:
<dependency>
    <groupId>com.github.yulichang</groupId>
    <artifactId>mybatis-plus-join-boot-starter</artifactId>
    <version>1.4.4</version>
</dependency>

##############################表链接查询 一对一################################
    /**
     * 根据条件查询产品表
     * @param queryParam
     * @return
     */
    public List<ForumZuoPin> queryList(ForumZuoPin queryParam) {
        /**
         * https://gitee.com/best_handsome/mybatis-plus-join/wikis/MyLambdaWrapper/selectCollection
         * leftJoin
         * 第一个参数: 参与连表的实体类class
         * 第二个参数: 连表的ON字段,这个属性必须是第一个参数实体类的属性  即链接表属性
         * 第三个参数: 参与连表的ON的另一个实体类属性 主表属性
         */
        MPJLambdaWrapper<ForumZuoPin> lambdaWrapper = new MPJLambdaWrapper<ForumZuoPin>();
        // 主表的全字段
        lambdaWrapper.selectAll(ForumZuoPin.class)
                /**
                 *                附表的部分字段 这种写法适用于 userName userHead 在forumZuoPin表中已定义的情况,目前是UserInfo实体 所以只能用selectAssociation
                 *                .select(ForumUser::getUserName,ForumUser::getUserHead)
                 */
                // 一对一查询并映射Association,把forumUser实体类中的所有字段,映射到ForumZuoPin实体类中的getUserInfo中,
                .selectAssociation(ForumUser.class,ForumZuoPin::getUserInfo)
                // selectAs用法,ForumUser中的sex字段  映射为 testSex 与ForumZuoPin中的字段对应 查到值就设置到testSex中
                .selectAs(ForumUser::getSex,ForumZuoPin::getTestSex)
                /**
                 *                 只映射部分字段 类比写法
                 *                 .selectAssociation(ForumUser.class,ForumZuoPin::getUserInfo,
                 *                         map -> map.id(ForumUser::getUserId)
                 *                                 .result(ForumUser::getUserName)
                 *                                 .result(ForumUser::getUserHead)
                 *                 )
                 *
                 * <resultMap id="xxxxxxxx" type="com.github.yulichang.join.dto.UserDTO">
                 *     <result property="id" column="id"/>
                 *     <result property="name" column="name"/>
                 *     <collection property="addressList" javaType="java.util.List"
                 *         ofType="com.github.yulichang.join.entity.UserAddressDO">
                 *         <id property="id" column="mpj_id"/>
                 *         <result property="address" column="address"/>
                 *         <result property="userId" column="user_id"/>
                 *     </collection>
                 * </resultMap>
                 *
                 */
                // 链接表  连接条件
                .leftJoin(ForumUser.class,ForumUser::getUserId,ForumZuoPin::getUserId);
        // 设置查询参数
        // 查询归类设置 如果如果是0,就查询观看人数高的
        if(queryParam.getContentType()==0){
            // queryWrapper.orderByDesc("look_count");
            lambdaWrapper.orderByDesc(ForumZuoPin::getLookCount);
        }else{
            // queryWrapper.eq("contentType",queryParam.getContentType());
            lambdaWrapper.eq(ForumZuoPin::getContentType,queryParam.getContentType());
        }
        // 删除状态
        // queryWrapper.eq("del",queryParam.getDel());
        lambdaWrapper.eq(ForumZuoPin::getDel,queryParam.getDel());
        // 执行查询
        List<ForumZuoPin> list = playMapper.selectJoinList(ForumZuoPin.class, lambdaWrapper);
        // 数据太少,这里暂时先增加点数据 追加5个
        Optional<ForumZuoPin> any = list.stream().findAny();
        for(int i = 0;i<5;i++){
            list.add(any.get());
        }
        return list;
    }
##############################表链接查询 一对一################################

Java8 时间处理
https://www.mianshigee.com/note/detail/21201dgt/


更新所有远程分支信息: 如果你的remote branch不是在origin下，按你得把命令中的 origin 换成你的名字
git remote update origin --prune
但我很好奇是否可以仅使用 IDEA UI 来做到这一点
VCS -> Git -> Fetch


#处理Long类型过长,前端js损失精度注解
https://blog.csdn.net/weixin_65549694/article/details/125055243

重装 IDEA 再也不愁了，一招搞定同步个人配置
https://blog.51cto.com/zhongmayisheng/5223333?b=totalstatistic

重装IDEA时，如何备份IDEA之前的配置
https://blog.csdn.net/qq_43783527/article/details/122947765

JetBrains全家桶激活  Idea所有版本激活
https://r86oxhhvu2.feishu.cn/docx/doxcnsqHeJ7dbM6hF4LEmU0jaxe

使用addViewControllers方法实现无业务逻辑跳转
https://www.5axxw.com/questions/simple/wdmc23

Spring AOP中增强Advice的执行顺序
https://www.cnblogs.com/longtianbin/archive/2022/11/15/16892993.html
在同一个切面(Apsect)定义中对于同一个Join Point而言，不同类型的Advice执行先后顺序依次是:
@Around 前置处理
@Before
@AfterReturning/@AfterThrowing
@After
@Around 后置置处理


AOP中After和AfterReturning的区别
https://blog.csdn.net/Tom098/article/details/105883301
@After 被代理的方法执行完成之后，要执行的代码。
@AfterReturning 新生成的代理方法执行完成之后（return 之后），要执行的代码，是放在finally块中的。


Spring boot开启定时任务的三种方式/CRON语法结构以及常例
https://blog.csdn.net/qianlixiaomage/article/details/106599951
语法格式为："秒域 分域 时域 日域 月域 周域 年域"

SpringBoot中使用动态定时任务+CRON+多线程（线程池）
https://blog.csdn.net/shi_nu_bi/article/details/116295461

需要注意Spring AOP 方法内部调用不生效,这个是一个面试考点, com.example.forumdemo.task.MyTask 这个类在使用LogAop时遇到了这种情况,
解决办法通过spring注入对象的方式解决即可
https://dandelioncloud.cn/article/details/1610971380525006849

springboot 中如何配置线程池
https://www.yisu.com/zixun/598216.html

JAVA 中 Map 与实体类相互转换的简单方法
https://www.cnblogs.com/zz150650/p/15841923.html

mybatis-plus（insertBatchSomeColumn批量添加）
https://blog.csdn.net/qq_50652600/article/details/126038809


spring boot 集成 websocket  实现消息推送
https://blog.csdn.net/A____t/article/details/127695152
Spring Boot集成WebSocket实现消息推送
https://blog.csdn.net/m0_73330311/article/details/126474113
SpringBoot2.0集成WebSocket，实现后台向前端推送信息
https://cloud.tencent.com/developer/article/2076306?areaSource=102001.13&traceId=cAR9DAbzvoCWuGYsrv-ou

